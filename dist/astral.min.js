!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.Astral=n():t.Astral=n()}(self,(()=>(()=>{"use strict";var t,n={d:(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};n.r(e),n.d(e,{context:()=>d,default:()=>f,event:()=>u,layout:()=>l}),function(t){!function(t){const n={};let e=!1;function i(t,n){const e=t.indexOf(n);e>-1&&t.splice(e,1)}function o(t){e&&console.debug("Astral.event $:",t)}t.subscribe=function(t,e){Array.isArray(n[t])||(n[t]=[],o(`Event: ${t} subscribers list initialized`)),-1===n[t].indexOf(e)&&(n[t].push(e),o(`Event: ${t}\nCallback: ${e}\nAction: callback added (subscribed)`))},t.publish=function(t,e){Array.isArray(n[t])?n[t].forEach((function(n){n(e),o(`Event: ${t}\nData: ${JSON.stringify(e)}\nCallback: ${n}\nAction: callback executed`)})):o(`Event: ${t}\nData: ${JSON.stringify(e)}\nAction: No subscribers found`)},t.unsubscribe=function(t,e){if(Array.isArray(n[t])){for(let o=0;o<n[t].length;o++)n[t][o]===e&&i(n[t],e);o(`Event: ${t}\nCallback: ${e}\nAction: callback removed (unsubscribed)`)}else o(`Event: ${t}\nNo subscribers found to unsubscribe`)},t.unsubscribeAll=function(t){if(Array.isArray(n[t])){for(let e=0;e<n[t].length;e++)i(n[t],n[t][e]);o(`Event: ${t}\nAction: All callbacks removed (unsubscribed)`)}else{for(const t in n)i(n[t],n[t]);o("Removed all subscriptions because no event name was given to unsubscribeAll function")}},t.setDebugMode=function(t){e=t,o("Debug mode set to: "+t)}}(t.event||(t.event={}))}(t||(t={}));const i=t.event;var o;!function(t){!function(t){const n={ExtraLarge:"ExtraLarge",Large:"Large",Medium:"Medium",Small:"Small",ExtraSmall:"ExtraSmall",Other:"Other"};let e={breakpoints:{[n.ExtraLarge]:{minWidth:1920,maxWidth:1/0,minHeight:840},[n.Large]:{minWidth:1280,maxWidth:1920,minHeight:646},[n.Medium]:{minWidth:960,maxWidth:1280,minHeight:380},[n.Small]:{minWidth:600,maxWidth:960,minHeight:0},[n.ExtraSmall]:{minWidth:0,maxWidth:600,minHeight:0},[n.Other]:{minWidth:600,maxWidth:1/0,minHeight:0}}},o=n;const r="astralInternalScreenResizeEvent",a="astralInternalOrientationChangeEvent";let c=!1;function s(){i.publish(r,f(l()))}function u(){const t=b();i.publish(a,t)}function l(){return{WIDTH:window.innerWidth,HEIGHT:window.innerHeight}}function d(t){const n=e.breakpoints[t];if(n)return n;throw new Error("Astral.layout: No breakpoint found for label: "+t)}function f(t){for(const n in e.breakpoints){const i=e.breakpoints[n];if(t.WIDTH>=i.minWidth&&t.WIDTH<=i.maxWidth&&t.HEIGHT>=i.minHeight)return i}throw new Error("Astral.layout: No breakpoint found for screen size: "+t.WIDTH+"x"+t.HEIGHT)}function b(){try{if(window.screen.orientation.type.match("portrait"))return"portrait";if(window.screen.orientation.type.match("landscape"))return"landscape"}catch(t){if(!window.matchMedia)throw new Error(`Astral.layout: No orientation found.\n${t}`);{const t=window.matchMedia("(orientation: portrait)");if(t&&t.matches)return"portrait";if(t&&!t.matches)return"landscape"}}throw new Error("Astral.layout: No orientation found.")}!function(){if(window.addEventListener("resize",s),window.screen&&window.screen.orientation)window.screen.orientation.addEventListener("change",(function(){u()}));else if(window.matchMedia){const t=window.matchMedia("(orientation: portrait)");u(),t.addListener((function(){u()}))}}(),t.config=function(t){if(!t||!t.breakpoints)throw new Error("Astral.layout: Invalid configuration");e=t,o=Object.keys(e.breakpoints).reduce(((t,n)=>(t[n]=n,t)),{})},t.getWindowSize=l,t.getBreakpointFromLabel=d,t.getBreakpoint=f,t.getOrientation=b,t.applyIf=function(t,n,e,o){if(!e||0===e.length||!t)throw new Error("Astral.layout: No conditions or callbackSuccess provided");function f(){let i=!1;for(let t=0;t<e.length;t++){const n=e[t];let a=!1;if("object"==typeof n){const t=d(n.breakpoint),e=l();switch(n.selector){case"<=":e.WIDTH<=t.maxWidth&&(a=!0);break;case">=":e.WIDTH>=t.minWidth&&(a=!0);break;case"<":e.WIDTH<t.maxWidth&&(a=!0);break;case">":e.WIDTH>t.minWidth&&(a=!0);break;default:e.WIDTH>=t.minWidth&&e.WIDTH<=t.maxWidth&&e.HEIGHT>=t.minHeight&&(a=!0)}}if("function"==typeof n&&(a=n()),r=`Condition ${t} matched: ${a}`,c&&console.debug(`Astral.layout $: ${r}`),a&&(i=!0),i&&o&&a&&(i=!0),i&&o&&!a&&(i=!1),o&&!a){i=!1;break}if(!o&&a){i=!0;break}}var r;i?t():n()}var b;b=f,i.subscribe(r,b),s(),function(t){i.subscribe(a,t),u()}(f)},t.getBreakpointLabels=function(){return o},t.setDebugMode=function(t){c=t}}(t.layout||(t.layout={}))}(o||(o={}));const r=o.layout;var a;!function(t){!function(t){const n={};let e=!1;function o(t,e){n[t]=null,r(`State: ${t}\nValue: ${e}\nAction: Initialized`),a(t,e)}function r(t){e&&console.debug("Astral.context $:",t)}function a(t,e){if("object"!=typeof t||null===t){if("string"==typeof t){void 0===n[t]&&o(t,null);const a=n[t];n[t]=e,r(`State: ${t}\nValue: ${e}\nAction: Updated`),i.publish(`ASTRAL_CONTEXT_UPDATED_INTERNAL_${t}`,{prevState:a,newState:n[t]})}}else for(const n in t)a(n,t[n])}t.getState=function(t){void 0===n[t]&&o(t,null);const e=function(t){return function(n){i.subscribe(`ASTRAL_CONTEXT_UPDATED_INTERNAL_${t}`,(function(t){n.call(null,t.prevState,t.newState)}))}}(t);return[n[t],e]},t.updateState=a,t.setDebugMode=function(t){e=t}}(t.context||(t.context={}))}(a||(a={}));const c=a.context;var s;!function(t){t.event=i,t.layout=r,t.context=c}(s||(s={}));const u=i,l=r,d=c,f=s;return e})()));
//# sourceMappingURL=astral.min.js.map